name: Update & Publish

on:
  workflow_dispatch:
    inputs:
      acvm-js-ref:
        description: The ACVM simulator reference to checkout
        required: false

jobs:
  update-and-publish:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: "noir-lang/acvm-simulator"
          ref: ${{ github.event.inputs.acvm-simulator-ref || 'master' }}
          path: ".cache/acvm-simulator"

      - name: Collect Revision
        id: collect-rev
        working-directory: ".cache/acvm-simulator"
        run: |
          echo "SIMULATOR_REV_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-22.11

      - name: Build with Nix
        run: |
          nix build github:noir-lang/acvm-simulator/${{ github.ref }}

      - name: Resolve symbolic link
        run: |
          echo "RESULT_PATH=$(readlink result)" >> $GITHUB_ENV

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-artifact
          path: ${{ env.RESULT_PATH }}

      - name: Configure git
        run: |
          git config user.name tomafrench
          git config user.email tomfrench@aztecprotocol.com

      - name: Commit updates
        run: |
          git add .
          git commit -m "tracking acvm-simulator@${{ env.SIMULATOR_REV_SHORT }}"
          git push --force

      - name: Publish to npm (nightly tag)
        if: ${{ !inputs.noir-ref }}
        run: |
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm (latest tag)
        if: ${{ inputs.noir-ref }}
        run: |
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
